{
  "id": "role_attribute",
  "title": "role attribute",
  "type": "attribute",
  "description": "The role attribute is used to convey the purpose of various elements to users of assistive technology. While the role attribute is defined in ARIA, these expectations test the attribute as implemented in HTML.",
  "references": [
    {
      "title": "WHATWG HTML spec for the role attribute",
      "url": "https://html.spec.whatwg.org/multipage/infrastructure.html#attr-aria-role"
    },
    {
      "title": "ARIA 1.1 spec for the role attribute",
      "url": "https://www.w3.org/TR/wai-aria-1.1/#host_general_role"
    },
    {
      "title": "Additional information about the role attribute in the ARIA 1.2 spec (draft)",
      "url": "https://www.w3.org/TR/wai-aria-1.2/#introroles"
    }
  ],
  "assertions": [
    {
      "id": "convey_presence",
      "title": "convey the presence of the role attribute",
      "rationale": "The user needs to know when a role is defined.",
      "notes": "The expectation is that a valid role value is conveyed to end users. This expectation does not check the correctness of the role conveyed, but only that a role is conveyed. Note that roles can be conveyed in a way that is implied by context and that AT have discretion in how to actually convey the role value. For example, some screen readers may convey the actual value of the role, and others may choose to convey a slightly different value. The correctness of role values is tested on a per-value bases elsewhere in this project.",
      "css_target": "*[role]",
      "strength": {
        "sr": "MUST",
        "vc": "MUST"
      },
      "operation_modes": [
        "sr/reading",
        "sr/interaction",
        "vc"
      ],
      "exclude_at": {"vc_ios":  "no_support"}
    },
    {
      "id": "support_fallback_roles",
      "title": "support fallback roles",
      "rationale": "If multiple roles are defined, the user needs to be made aware of the first supported role value",
      "notes": "Authors can list multiple role values within a role attribute, and each role is separated by white space. The first recognized role will be used used. This can be helpful when authors want to use a new role that is not widely supported yet, and fall back to an older role with wider support.",
      "css_target": "*[role]",
      "strength": {
        "sr": "MUST",
        "vc": "MUST"
      },
      "operation_modes": [
        "sr/reading",
        "sr/interaction",
        "vc"
      ],
      "exclude_at": {"vc_ios":  "no_support"}
    },
    {
      "id": "process_change_in_role",
      "title": "process changes in role values",
      "rationale": "If the role of an element changes, users need to be able to determine the new role",
      "notes": "Due to the way that accessibility APIs and caching mechanisms work, this may not be supported. [ARIA explicitly forbids authors from changing roles in this way](https://www.w3.org/TR/wai-aria-1.1/#roles).",
      "css_target": "*[role]",
      "strength": {
        "sr": "SHOULD",
        "vc": "SHOULD"
      },
      "operation_modes": [
        "sr/reading",
        "sr/interaction",
        "vc"
      ],
      "exclude_at": {"vc_ios":  "no_support"}
    },
    {
      "id": "browse_caret_not_lost",
      "title": "lose the location of the browsing caret when a container role is changed",
      "rationale": "If a screen reader user is browsing the contents of a container element and the role of the container changes, the caret should stay in the same location so that the user can continue reading the document in a logical order.",
      "notes": "When the role of an element changes, some AT and accessibility APIs may remove the element and all children and then replace them with the new container, which may result in the screen reader losing its caret position.",
      "css_target": "*[role]",
      "strength": {
        "sr": "SHOULD NOT",
        "vc": "NA"
      },
      "operation_modes": [
        "sr/reading",
        "sr/interaction"
      ]
    },
    {
      "id": "vc_actionable",
      "title": "use the role to determine if an element is actionable",
      "rationale": "Voice control users may wish to activate roles that are actionable.",
      "notes": "Voice control software may choose to look at an element's role when determining if it is actionable. Some voice control software will allow users to activate elements by specific roles, while others will only flag actionable elements with numbers. Note that Voice Control for iOS will flag all elements on the page with numbers, not just those that are actionable.",
      "css_target": "*[role]",
      "strength": {
        "sr": "NA",
        "vc": "MAY"
      },
      "operation_modes": [
        "vc"
      ],
      "exclude_at": {
        "vc_ios": "no_support"
      }
    }
  ],
  "date_updated": "2019-12-02"
}
