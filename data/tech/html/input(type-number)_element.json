{
  "$schema": "../../schema/feature.json",
  "id": "input(type=number)_element",
  "title": "input[type=\"number\"] element",
  "type": "element",
  "description": "",
  "is_form_control": true,
  "references": [
    {
      "title": "WHATWG HTML spec for input[type=\"number\"]",
      "url": "https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number)"
    },
    {
      "title": "HTML AAM for the input[type=\"number\"]",
      "url": "https://w3c.github.io/html-aam/#el-input-number"
    }
  ],
  "assertions": [
    {
      "id": "convey_name",
      "examples":  [
        "A screen reader will announce the name (label).",
        "Voice control software will let the user say something like \"click <name>\" to activate the control."
      ],
      "css_target": "input[type=\"number\"]"
    },
    {
      "id": "convey_role",
      "examples": [
        "A screen reader might be announce the role as \"number\", \"text input\", \"edit\", \"edit text\", \"spinbox\", \"spin button\", \"incrementable\" etc.",
        "Voice control software will let the user say something like \"click edit\" to focus a the input or flag the role with a number."
      ],
      "css_target": "input[type=\"number\"]"
    },
    {
      "id": "convey_value",
      "css_target": "input[type=\"number\"]"
    },
    {
      "id": "convey_change_in_value",
      "examples": [
        "When the user enter texts, the screen reader will announce it back to them."
      ],
      "css_target": "input[type=\"number\"]"
    },
    {
      "id": "provide_shortcuts",
      "css_target": "input[type=\"number\"]"
    },
    {
      "id": "increment_decrement",
      "title": "allow incrementing and decrementing the value",
      "rationale": "users might want to increment and decrement the value",
      "strength": {
        "sr": "MAY",
        "vc": "MAY"
      },
      "examples": [
        "Desktop screen readers might allow users to adjust the value by pressing up and down arrows",
        "Mobile screen readers might allow users to adjust the value by swiping up or down",
        "Voice control software might allow someone to say something like \"increment <name>\""
      ],
      "css_target": "input[type=\"number\"]",
      "preconditions": [],
      "operation_modes": [
        "sr/interaction",
        "vc"
      ],
      "exclude_at": {"talkback":  "no_commands", "va_and":  "no_commands", "vc_macos": "no_commands", "wsr": "no_commands"},
      "exclude_browsers": {"ios_saf":  "no_support"}
    },
    {
      "id": "allow_data_entry",
      "css_target": "input[type=\"number\"]"
    },
    {
      "id": "convey_rejected_input",
      "title": "convey when input is rejected",
      "rationale": "The number input only allows numbers to be entered. Characters that the user attempts to enter that are outside of the allowed characters are rejected by the input and never displayed visually. Because a sighted user gets this visual feedback that their input was not accepted, a blind screen reader user also needs to know when input is not accepted. Otherwise, the user might assume that the data was accepted.",
      "examples": [
        "the behavior might be implied if the control is conveyed as something like \"number\", \"spinbox\", \"spin button\", or \"incrementable\"",
        "some AT/browser combinations will allow invalid input but convey the field as invalid",
        "screen readers might announce an earcon when the user tries to enter data beyond the maximum length.",
        "screen readers might imply that the input was rejected by not announcing anything when a user tries to enter data (usually the keypress is echoed)"
      ],
      "strength": {
        "sr": "MUST",
        "vc": "NA"
      },
      "css_target": "input[type=\"number\"]",
      "operation_modes": [
        "sr/interaction"
      ]
    }
  ],
  "date_updated": "2020-03-16"
}
