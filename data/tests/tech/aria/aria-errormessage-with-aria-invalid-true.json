{
  "title": "aria-errormessage attribute with aria-invalid=\"true\"",
  "description": "Tests the aria-errormessage attribute with aria-invalid=\"true\". The error message must be conveyed.",
  "html_file": "aria/aria-errormessage.html",
  "assertions": [
    {
      "feature_id": "aria/aria-errormessage_attribute",
      "feature_assertion_id": "convey_pertinent",
      "applied_to": "html/input(type-text)_element"
    },
    {
      "feature_id": "aria/aria-errormessage_attribute",
      "feature_assertion_id": "convey_not_pertinent",
      "applied_to": "html/input(type-text)_element"
    }
  ],
  "commands": {
    "dragon_win": {},
    "jaws": {
      "chrome": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\" Edit\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\" Edit Has Error invalid entry\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", edit, invalid entry, has error, example error text, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        }
      ],
      "edge": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"blank, Input with aria-invalid=\"true\" Edit Has Error invalid entry\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "Input with aria-invalid=\"true\" Edit invalid entry Has Error example error text Type in text.",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"blank, Input with aria-invalid=\"false\" Edit",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\" Edit type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        }
      ],
      "ie": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"blank, edit, Input with aria-invalid=\"true\", invalid entry, has error, example error text, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", edit, invalid entry, has error, example error text, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"edit, Input with aria-invalid=\"false\", edit, has error, example error text, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit, has error, example error text, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\" Edit\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\" Edit invalid entry\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\" Edit invalid entry\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "narrator": {
      "edge": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit, scan off\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", edit, invalid, scan off\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", edit, invalid\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "nvda": {
      "chrome": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=false]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=false]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit, blank\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", edit, invalid entry, example error text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", edit, invalid entry, example error text, blank\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        }
      ],
      "edge": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=false]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=false]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit, blank\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", edit, invalid entry\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", edit, invalid entry, blank\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Clickable, Input with aria-invalid=\"false\", edit has autocomplete\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
        "output": "\"Input with aria-invalid=\"false\", edit has autocomplete blank \"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Clickable Input with aria-invalid=\"true\", edit, invalid entry  has auto complete example error text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", edit, invalid entry  has auto complete, example error text, blank\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "talkback": {
      "and_chr": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Edit box, input with aria-invalid=\"true\"\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Edit box, input with aria-invalid=\"false\"\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "va_and": {},
    "vo_ios": {
      "ios_saf": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", text field, double tap to edit\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", text field, invalid date, example error text, double tap to edit\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "vo_macos": {
      "safari": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", invalid data, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", invalid data, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "orca": {
      "firefox": [
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", entry, invalid entry, example error text\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage][aria-invalid=true]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"true\", entry, invalid entry, example error texte\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", entry\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-errormessage]:not([aria-invalid=true])",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Input with aria-invalid=\"false\", entry\"",
          "results": [
            {
              "feature_id": "aria/aria-errormessage_attribute",
              "feature_assertion_id": "convey_not_pertinent",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "vc_ios": {},
    "vc_macos": {},
    "wsr": {}
  },
  "history": [
    {
      "date": "2019-08-02",
      "message": "Updated results"
    },
    {
      "date": "2019-04-09",
      "message": "Test created"
    },
    {
      "date": "2019-09-16",
      "message": "Add orca results"
    },
    {
      "date": "2021-07-23",
      "message": "Added Narrator results for NVDA and JAWS, updated NVDA+Chrome results."
    },
    {
      "date": "2023-06-20",
      "message": "Updated all results"
    }
  ],
  "versions": {
    "jaws": {
      "browsers": {
        "chrome": {
          "at_version": "2023.2306.38",
          "browser_version": "114",
          "os_version": "Windows 11 version 22h2",
          "date": "2023-06-20"
        },
        "edge": {
          "at_version": "2023.2306.38",
          "browser_version": "114",
          "os_version": "Windows 11 version 22h2",
          "date": "2023-06-20"
        },
        "ie": {
          "at_version": "2019.1907.42",
          "browser_version": "11",
          "os_version": "Windows 10 version 1903",
          "date": "2019-09-02"
        },
        "firefox": {
          "at_version": "2023.2306.38",
          "browser_version": "114",
          "os_version": "Windows 11 version 22h2",
          "date": "2023-06-20"
        }
      }
    },
    "narrator": {
      "browsers": {
        "edge": {
          "at_version": "Windows 11 version 22h2",
          "browser_version": "114",
          "os_version": "Windows 11 version 22h2",
          "date": "2023-06-20"
        }
      }
    },
    "nvda": {
      "browsers": {
        "chrome": {
          "at_version": "2024.4.2",
          "os_version": "Windows 11 version 24h2",
          "browser_version": "137",
          "date": "2025-05-23"
        },
        "edge": {
          "at_version": "2023.1",
          "os_version": "Windows 11 version 22h2",
          "browser_version": "114",
          "date": "2023-06-20"
        },
        "firefox": {
          "at_version": "2024.4.2",
          "os_version": "Windows 11 version 24h2",
          "browser_version": "138.0.4",
          "date": "2025-05-23"
        }
      }
    },
    "orca": {
      "browsers": {
        "firefox": {
          "at_version": "3.31.4",
          "browser_version": "69",
          "os_version": "Ubuntu 19.04",
          "date": "2019-09-16"
        }
      }
    },
    "talkback": {
      "browsers": {
        "and_chr": {
          "at_version": "14",
          "browser_version": "114",
          "os_version": "13",
          "date": "2023-06-20"
        }
      }
    },
    "vo_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "16.5",
          "browser_version": "16.5",
          "os_version": "16.5",
          "date": "2023-06-20"
        }
      }
    },
    "vo_macos": {
      "browsers": {
        "safari": {
          "at_version": "13.4",
          "browser_version": "16.5",
          "os_version": "13.4",
          "date": "2023-06-20"
        }
      }
    }
  }
}