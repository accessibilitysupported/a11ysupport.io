{
  "$schema": "../../../schema/test.json",
  "title": "HTML input with datalist test",
  "description": "A sample datalist attached to a text input. Provide feedback on this test and results in [issue #73](https://github.com/accessibilitysupported/a11ysupport.io/issues/73)",
  "html_file": "html/datalist.html",
  "assertions": [
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_name"
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_role",
      "browserNotes": {
        "jaws": {
          "chrome": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist.",
          "ie": "When paired with IE, JAWS does not alter the role to convey the datalist functionality.",
          "firefox": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist."
        },
        "nvda": {
          "chrome": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"has popup\") to convey the presence of the datalist.",
          "firefox": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"subMenu\") to convey the presence of the datalist."
        }
      }
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_change_in_value",
      "browserNotes": {
        "jaws": {
          "chrome": "Focus was sent back to the input and the input was announced",
          "ie": "unknown because it was not possible to navigate to a suggestion to activate",
          "firefox": "Unknown because it was not possible to navigate to a suggestion to activate"
        },
        "narrator": {
          "edge": "The value was announced after a suggestion was activated and focus was returned to the text input"
        },
        "nvda": {
          "chrome": "Focus was returned to the text input",
          "firefox": "Focus was returned to the text input but only the value was announced"
        },
        "talkback": {
          "and_chr": "value was announced and focus was returned to the text input."
        },
        "vo_ios": {
          "ios_saf": "The activated suggestion was announced, and focus was moved to a new suggestion"
        },
        "vo_macos": {
          "safari": "Focus was returned to the text input"
        }
      }
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_value"
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "provide_shortcuts"
    },
    {
      "feature_id": "html/list_attribute",
      "feature_assertion_id": "convey_presence",
      "applied_to": "html/input(type-text)_element",
      "browserNotes": {
        "jaws": {
          "chrome": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist.",
          "ie": "When paired with IE, JAWS does not alter the role to convey the datalist functionality.",
          "firefox": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist."
        },
        "nvda": {
          "chrome": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"subMenu\") to convey the presence of the datalist.",
          "firefox": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"subMenu\") to convey the presence of the datalist."
        }
      }
    },
    {
      "feature_id": "html/datalist_element",
      "feature_assertion_id": "convey_role",
      "browserNotes": {
        "jaws": {
          "chrome": "The datalist is conveyed as a menu as opposed to a listbox."
        },
        "narrator": {
          "edge": "The datalist role is implied by the \"combo\" role and \"suggestions\" announcement."
        },
        "nvda": {
          "chrome": "The datalist role is implied by the \"has auto complete\" announcement for the text input, combined with down arrow navigating suggestions. However, table semantics were also announced when none exist.",
          "firefox": "The datalist role is implied by the \"has auto complete\" announcement for the text input, combined with down arrow navigating suggestions. However, all options are announced as \"blank\"."
        },
        "vo_ios": {
          "ios_saf": "Suggestions are listed in the normal virtual keyboard predictions. However, there is no indication that these predictions are suggestions from the website, and may be confused with the normal virtual keyboard predictions."
        }
      }
    },
    {
      "feature_id": "html/datalist_element",
      "feature_assertion_id": "convey_boundaries",
      "browserNotes": {
        "vo_ios": {
          "ios_saf": "Boundaries can be implied by the role of \"prediction\" being announced for each available prediction. In other words, when the user hears a different role announced, they can assume they left the predictions."
        },
        "orca": {
          "firefox": "boundaries are implied by the menu and focus being sent back to the input"
        }
      }
    },
    {
      "feature_id": "html/datalist_element",
      "feature_assertion_id": "convey_change_in_suggestions"
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_name",
      "browserNotes": {
        "vo_ios": {
          "ios_saf": "Only the option value is listed as predictions, not the name."
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_role",
      "browserNotes": {
        "jaws": {
          "chrome": "The menu context might imply a menuitem role instead of an option role"
        },
        "talkback": {
          "and_chr": "option role was implied by the announcement of \"autofill menu\" and \"in list\" when entering the list of options"
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_value",
      "browserNotes": {
        "narrator": {
          "edge": "Only the name is displayed by Edge and announced by Narrator if both the name and value are set."
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_posinset",
      "browserNotes": {
        "nvda": {
          "chrome": "the first item was announced as \"row 1\", however other items did not convey their position."
        }
      }
    }
  ],
  "commands": {
    "dragon_win": {
      "chrome": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "text input was focused",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_role",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "text input was focused",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_dropdown_choices",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "suggestions were displayed",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "choose_dropdown_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "text of command was entered into the text input",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            }
          ]
        },
        {
          "command": "activate_role",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "text of command was entered into the text input",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            }
          ]
        },
        {
          "command": "choose_dropdown_option",
          "css_target": "datalist option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "text of command was entered into the text input",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "jaws": {
      "chrome": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Edit combo\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "name implied by reading order"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, edit combo, to set the value use the arrow keys or type the value.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"<window title> Function, type Edit combo, misspelled, async function\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "Shown in list of form controls as \"function type edit combo\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type Edit combo\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Auto fill list box expanded, Function, 1 of 6, To move to an item press the arrow keys\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "implied by the text \"list box expanded\""
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass",
              "notes": "opening was conveyed as well as posinset"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "Name, posinset, and value are announced when provided.",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ],
      "edge": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Edit combo\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "name implied by reading order"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, edit combo, to set the value use the arrow keys or type the value.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"<window title> Function, type Edit combo, async function\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "Shown in list of form controls as \"function type edit combo\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type Edit combo\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Auto fill list box expanded, Function, 1 of 6, To move to an item press the arrow keys\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "implied by the text \"list box expanded\""
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass",
              "notes": "opening was conveyed as well as posinset"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "Name, posinset, and value are announced when provided.",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ],
      "ie": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"edit, function type, edit, type in text\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Edit, type in text\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "unable to select an option",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "fail"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "Shown in list of form controls with name and \"edit\" role",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type Edit, type in text\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "fail"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function type, edit, has popup, function, type in text\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "announced the name when entering the input."
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass",
              "notes": "conveyed by 'has popup'"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Edit has popup, type in text\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function, edit, has popup, async function, type in text\" (input was re-announced with new value)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "Shown in list of elements with name and \"edit\" role",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Edit, has popup\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function, 1 of 6, to move to an item press the arrow keys\"",
          "notes": "observation: sometimes pressing down arrow will not move virtual focus to an option in the list, but instead to content after the input. Not able to reproduce consistently.",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"async function, 1 of 3\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "narrator": {
      "edge": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Combo edit, scan off.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass",
              "notes": "conveyed by 'combo edit' role"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Combo edit, scan off, suggestions available.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass",
              "notes": "conveyed by 'combo edit' role"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function\" (new value was conveyed)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Combo edit, press space to edit\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function, 1 of 6, selected\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "start of target",
          "output": "\"function, 1 of 6, selected\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "within target",
            "focus_location": "within target"
          },
          "after": "end of target",
          "output": "\"async generator function, 6 of 6, selected\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "\"suggestions\" is announced every time the suggestions change",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function, 1 of 6, selected\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"async generator function\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "nvda": {
      "chrome": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Combo box, has auto complete, editable.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Combo box, has auto complete, editable. Blank.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"<page title> Function type combo box, has auto complete, editable, function\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "Shown in list of form controls with name and \"function type; combobox; edit has auto complete editable\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type Combo box, has auto complete, editable.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"auto fill list expanded, function, 1 of 6\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "Name, value, and posinset are announced when provided.",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ],
      "edge": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Combo box, has auto complete, editable.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Combo box, has auto complete, editable. Blank.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"<page title> Function type combo box, has auto complete, editable, function\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "Shown in list of form controls with name and \"function type; combobox; edit has auto complete editable\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type Combo box, has auto complete, editable.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"auto fill list expanded, function, dot 1 of 6\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "Name, value, and posinset are announced when provided.",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"clickable, Function type, Edit subMenu, has auto complete, function\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, Edit has auto complete. selected function.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "document title and input were re-announced with the new value",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "\"Function type Edit; subMenu has auto complete.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type Edit subMenu, has auto complete. function.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"list, function, 1 of 6\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "async generator function, 6 of 6",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "function 1 of 6",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "implied by list context"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail",
              "notes": "only name was conveyed"
            }
          ]
        }
      ]
    },
    "talkback": {
      "and_chr": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"edit box, function type, double-tap to edit text, edit options available\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass",
              "notes": "after double tapping on the input, 'showing autofill popup' is announced."
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function, in list, showing autofill popup, 6 items\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"edit box, function type, double-tap to enter text\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"autofill, menu, disabled\", swipe right again, \"function, in list, showing autofill popup, 6 items\"",
          "notes": "the disabled state was incorrectly conveyed",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "showing items 1 of 6",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "function* generator function, double tap to activate, double tap and hold to long press",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "va_and": {
      "and_chr": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was not focused",
          "notes": "said \"tap function type\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was flagged with a number",
          "notes": "said \"show numbers\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "option was flagged for disambiguation",
          "notes": "said \"tap function\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "options were flagged with a number",
          "notes": "said \"show numbers\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "datalist option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "options were flagged for disambiguation",
          "notes": "said \"tap target arrow\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "vo_ios": {
      "ios_saf": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, text field, list box popup, double tap to edit.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function, prediction\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item_of_type",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, text field, list box popup, double tap to edit.\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "touch_type",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function, prediction\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "implied by the prediction roles"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function, prediction\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "touch_type",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function*\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "vo_macos": {
      "safari": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, list box popup, edit text\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, list box popup, edit text\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "(the entered character was announced)",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "Shown in list of form controls with name and \"list box popup edit text\" role",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"Function type, list box popup, edit text\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "not possible to navigate to datalist and suggestions are not announced",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "fail"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "target",
            "focus_location": "target"
          },
          "after": "target",
          "output": "no announcement made",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "nothing was conveyed at all",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "orca": {
      "firefox": [
        {
          "command": "next_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function type, entry\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function type, entry, focus mode\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            },
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "applied_to": "html/input(type-text)_element",
              "result": "fail"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "the character is announced",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "focus was returned to the input and the input was re-announced with the new value \"function\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_edit_field",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"function type, entry\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "list_edit_fields",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "in list of text fields",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"menu, function\"",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "partial",
              "notes": "data list is conveyed as a menu instead of a listbox"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "within target",
            "focus_location": "within target"
          },
          "after": "end of target",
          "output": "focus is sent back to the input and the input is announced",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "css_target": "datalist",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "no announcements",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "before target",
            "focus_location": "before target"
          },
          "after": "target",
          "output": "\"generator function\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "partial",
              "notes": "the menu role might imply a menuitem role instead of an option role"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "vc_ios": {
      "ios_saf": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was focused",
          "notes": "said \"tap function type\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "names were not listed for options",
          "notes": "said \"show names\". This was done after entering the word \"function\" into the input so that suggestions were displayed. ",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "datalist option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "names were not listed for options",
          "notes": "said \"show names\". This was done after entering the word \"function\" into the input so that suggestions were displayed. ",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "vc_macos": {
      "safari": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "input was focused",
          "notes": "said \"click function type\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was flagged with a number",
          "notes": "said \"show numbers\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "option was not activated",
          "notes": "said \"click function\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was not flagged with a number",
          "notes": "said \"show numbers\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "datalist option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "option was not activated",
          "notes": "said \"click function\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "wsr": {
      "chrome": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was activated",
          "notes": "said \"click function type\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was flagged with a number",
          "notes": "said \"show numbers\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was not activated",
          "notes": "said \"click function\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was not flagged with a number",
          "notes": "said \"show numbers\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "datalist option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was not activated",
          "notes": "said \"click function\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ],
      "edge": [
        {
          "command": "activate_name",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was activated",
          "notes": "said \"click function type\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "input[type=\"text\"]",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was flagged with a number",
          "notes": "said \"show numbers\"",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was activated",
          "notes": "said \"click function\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_numbers",
          "css_target": "option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "role was flagged with a number",
          "notes": "said \"show numbers\"",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_name",
          "css_target": "datalist option",
          "before": {
            "mode": "auto",
            "virtual_location": "na",
            "focus_location": "na"
          },
          "after": "na",
          "output": "",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "na",
              "notes": "not displayed"
            }
          ]
        }
      ]
    }
  },
  "history": [
    {
      "date": "2019-07-26",
      "message": "Talkback results added. Thank you @dennisl"
    },
    {
      "date": "2019-07-24",
      "message": "Add assertion for position in set information for the option element"
    },
    {
      "date": "2019-07-20",
      "message": "Test created"
    },
    {
      "date": "2019-09-15",
      "message": "Add orca results"
    },
    {
      "date": "2019-09-23",
      "message": "Added vc_ios results"
    },
    {
      "date": "2019-10-02",
      "message": "Add va_and results"
    },
    {
      "date": "2019-10-07",
      "message": "Add vc_macos results"
    },
    {
      "date": "2019-10-18",
      "message": "Add wsr results"
    },
    {
      "date": "2020-02-01",
      "message": "update results for all core combinations of screen readers and voice control software except for those on android."
    },
    {
      "date": "2020-02-03",
      "message": "update android results for Talkback and Voice Access."
    },
    {
      "date": "2020-02-03",
      "message": "update android results for core desktop screen readers."
    },
    {
      "date": "2021-07-30",
      "message": "Added Narrator results for NVDA and JAWS, updated NVDA+Chrome results."
    }
  ],
  "versions": {
    "dragon_win": {
      "browsers": {
        "chrome": {
          "at_version": "15.30",
          "browser_version": "79",
          "os_version": "1909",
          "date": "2020-02-01"
        }
      }
    },
    "jaws": {
      "browsers": {
        "chrome": {
          "at_version": "2021.2107.12",
          "browser_version": "92",
          "os_version": "21H1",
          "date": "2021-07-30"
        },
        "edge": {
          "at_version": "2021.2107.12",
          "browser_version": "92",
          "os_version": "21H1",
          "date": "2021-07-30"
        },
        "ie": {
          "at_version": "2020.2001.70",
          "browser_version": "11",
          "os_version": "1909",
          "date": "2020-02-27"
        },
        "firefox": {
          "at_version": "2020.2001.70",
          "browser_version": "73",
          "os_version": "1909",
          "date": "2020-02-27"
        }
      }
    },
    "narrator": {
      "browsers": {
        "edge": {
          "at_version": "1909",
          "browser_version": "44",
          "os_version": "1909",
          "date": "2020-02-27"
        }
      }
    },
    "nvda": {
      "browsers": {
        "chrome": {
          "at_version": "2021.1",
          "os_version": "21H1",
          "browser_version": "92",
          "date": "2021-07-30"
        },
        "edge": {
          "at_version": "2021.1",
          "os_version": "21H1",
          "browser_version": "92",
          "date": "2021-07-30"
        },
        "firefox": {
          "at_version": "2019.3.1",
          "browser_version": "73",
          "os_version": "1909",
          "date": "2020-02-27"
        }
      }
    },
    "orca": {
      "browsers": {
        "firefox": {
          "at_version": "3.34.0",
          "browser_version": "73",
          "os_version": "Ubuntu 19.10",
          "date": "2020-02-27"
        }
      }
    },
    "talkback": {
      "browsers": {
        "and_chr": {
          "at_version": "8.1",
          "browser_version": "80",
          "os_version": "7",
          "date": "2020-02-27"
        }
      }
    },
    "va_and": {
      "browsers": {
        "and_chr": {
          "at_version": "3.1",
          "browser_version": "79",
          "os_version": "7",
          "date": "2020-02-03"
        }
      }
    },
    "vo_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "13.3.1",
          "browser_version": "13.3.1",
          "os_version": "13.3.1",
          "date": "2020-02-27"
        }
      }
    },
    "vo_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.15.3",
          "browser_version": "13.0.5",
          "os_version": "10.15.3",
          "date": "2020-02-27"
        }
      }
    },
    "vc_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "13.3.1",
          "browser_version": "13.3.1",
          "os_version": "13.3.1",
          "date": "2020-02-01"
        }
      }
    },
    "vc_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.15.3",
          "browser_version": "13.0.5",
          "os_version": "10.15.3",
          "date": "2020-02-27"
        }
      }
    },
    "wsr": {
      "browsers": {
        "edge": {
          "at_version": "1903",
          "browser_version": "44",
          "os_version": "1903",
          "date": "2019-10-18"
        },
        "chrome": {
          "at_version": "1903",
          "browser_version": "79",
          "os_version": "1909",
          "date": "2020-02-01"
        }
      }
    }
  }
}
